<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.studysiba.mapper.member.MemberMapper">


    <!-- 회원가입여부확인 -->
    <select id="registrationStatus" parameterType="MemberVO" resultType="int">
        SELECT COUNT(*) FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원타입값조회 -->
    <select id="getType" parameterType="MemberVO" resultType="String">
        SELECT MBR_TYPE FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원이메일조회 -->
    <select id="getEmail" parameterType="MemberVO" resultType="String">
        SELECT MBR_EMAIL FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원인증코드조회 -->
    <select id="getCode" parameterType="MemberVO" resultType="String">
        SELECT MBR_CODE FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원인증코드갱신 -->
    <select id="renewAuthenticationCode" parameterType="MemberVO">
        UPDATE MEMBER SET MBR_CODE = #{mbrCode}
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원인증확인 -->
    <select id="informationCheckStatus" parameterType="MemberVO" resultType="int">
        SELECT COUNT(*) FROM MEMBER
        WHERE MBR_ID = #{mbrId} AND MBR_CODE = #{mbrCode}
    </select>

    <!-- 회원활성화 및 코드갱신 -->
    <select id="changeStatus" parameterType="MemberVO">
        UPDATE MEMBER
        SET MBR_TYPE = 'NORMAL', MBR_AUTH = 'NORMAL', MBR_CODE = #{mbrCode}, MBR_CONNECT = NOW(), MBR_JOIN = NOW()
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원아이디중복조회 -->
    <select id="idReduplicationCheck" parameterType="MemberVO" resultType="int">
        SELECT COUNT(*) FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원이메일인증상태조회 -->
    <select id="emailApprovalStatus" parameterType="MemberVO" resultType="String">
        SELECT MBR_TYPE FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 회원정보등록 -->
    <insert id="memberRegistration" parameterType="MemberVO">
        <selectKey keyProperty="mbrNo" order="BEFORE" resultType="int">
            SELECT COALESCE(MAX(MBR_NO+1),1) AS MBR_NO FROM MEMBER
        </selectKey>
            INSERT INTO MEMBER(MBR_NO, MBR_TYPE, MBR_AUTH, MBR_CODE, MBR_ID, MBR_PASS, MBR_NICK,MBR_EMAIL, MBR_PROFILE, MBR_CONNECT, MBR_JOIN)
            VALUES(#{mbrNo}, 'NONE', 'NONE', #{mbrCode}, #{mbrId}, #{mbrPass}, #{mbrNick}, #{mbrEmail}, #{mbrProfile}, NOW(), NOW())
    </insert>

    <!-- 회원이메일중복조회 -->
    <select id="emailReduplicationCheck" parameterType="MemberVO" resultType="int">
        SELECT COUNT(*) FROM MEMBER
        WHERE MBR_EMAIL = #{mbrEmail}
    </select>

    <select id ="nickReduplicationCheck" parameterType="MemberVO" resultType="int">
        SELECT COUNT(*) FROM MEMBER
        WHERE MBR_NICK = #{mbrNick}
    </select>

    <!-- 회원방문자수조회 -->
    <select id="totalVisitCountCheck" parameterType="MemberVO" resultType="int">
        SELECT COALESCE(COUNT(*),0) AS COUNT FROM VISIT
        WHERE VIS_ID = #{mbrId}
    </select>

    <!-- 회원정보조회 -->
    <select id="viewMemberInformation" parameterType="MemberVO" resultType="MemberVO">
        SELECT
        MBR_NO, MBR_TYPE, MBR_AUTH, MBR_CODE, MBR_ID, MBR_PASS, MBR_NICK,MBR_EMAIL, MBR_PROFILE, MBR_CONNECT, MBR_JOIN
        FROM MEMBER
        WHERE MBR_ID = #{mbrId}
    </select>

    <!-- 승인나지 않은 이메일로 아이디 조회 -->
    <select id="viewIdByEmail" parameterType="MemberVO" resultType="String">
        SELECT MBR_ID FROM MEMBER WHERE MBR_EMAIL = #{mbr_Email} AND MBR_TYPE = 'NONE';
    </select>

    <!-- 승인나지 않은 이메일 변경 -->
    <update id="updateEmail" parameterType="MemberVO">
        UPDATE MEMBER
        SET MBR_EMAIL = #{MBR_}
        WHERE MBR_EMAIL = 'BYTRUSTU@GMAIL.COM' AND MBR_TYPE = 'NONE';
    </update>

    <update id="deleteInformation" parameterType="MemberVO">
        DELETE FROM MEMBER
        WHERE MBR_ID = #{mbrId} AND MBR_TYPE = 'NONE'
    </update>

    <!-- 회원 이메일 정보 확인 -->
    <select id="checkMailState" parameterType="MemberVO" resultType="String">
        SELECT MBR_ID FROM MEMBER
        WHERE MBR_EMAIL = #{mbrEmail} AND ( MBR_AUTH = 'NORMAL' OR MBR_AUTH = 'ADMIN' )
    </select>

    <!-- 회원 이메일 인증을 통한 비밀번호 변경 -->
    <update id="changePasswordEmailAuth" parameterType="MemberVO" >
        UPDATE MEMBER SET MBR_PASS = #{mbrPass}
        WHERE MBR_ID = #{mbrId}
    </update>


</mapper>